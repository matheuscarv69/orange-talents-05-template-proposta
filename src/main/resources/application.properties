spring.application.name=Propostas

# datasource
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost:5543}/proposta
spring.datasource.username=${POSTGRES_USERNAME:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:password}

# jpa
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=${POSTGRES_SCHEMA:desafio}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# Feign
feign.client.config.default.connect-timeout=100
feign.client.config.default.read-timeout=100

# Http clients
api-analysis-proposal=${API_ANALYSIS_PROPOSAL:http://localhost:9999}
api-accounts=${API_ACCOUNTS:http://localhost:8888}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/desafio-proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/desafio-proposta/protocol/openid-connect/certs}


# Scheduled delay
delay.scheluded.card.association=1000

# Actuator
# Gerenciado endpoints
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info

# Fornecendo informacoes para o endpoint info
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@